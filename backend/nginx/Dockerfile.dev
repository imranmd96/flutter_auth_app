# Use the official Nginx image as the base
FROM nginx:alpine

# Install necessary packages
RUN apk add --no-cache curl tzdata

# Set timezone
ENV TZ=UTC

# Create necessary directories
RUN mkdir -p /var/log/nginx \
    && mkdir -p /var/cache/nginx \
    && mkdir -p /etc/ssl/private \
    && mkdir -p /usr/share/nginx/html \
    && mkdir -p /run \
    && chown -R nginx:nginx /run \
    && touch /var/log/nginx/access.log \
    && touch /var/log/nginx/error.log \
    && touch /var/log/nginx/access_http.log \
    && touch /var/log/nginx/error_http.log \
    && chmod -R 777 /var/log/nginx \
    && chmod -R 777 /var/cache/nginx \
    && chmod 777 /etc/nginx/conf.d \
    && chmod 777 /run

# Copy Nginx configuration
COPY conf.d/default.conf /etc/nginx/conf.d/default.conf

# Copy SSL certificates if they exist
COPY ssl/fullchain.pem /etc/ssl/private/fullchain.pem
COPY ssl/privkey.pem /etc/ssl/private/privkey.pem
COPY ssl/dhparam.pem /etc/ssl/private/dhparam.pem

# Copy welcome page
COPY welcome.html /usr/share/nginx/html/welcome.html

# Set proper permissions
RUN chmod 644 /etc/nginx/conf.d/default.conf \
    && chmod 644 /usr/share/nginx/html/welcome.html \
    && chmod 644 /etc/ssl/private/privkey.pem \
    && chmod 644 /etc/ssl/private/fullchain.pem \
    && chmod 644 /etc/ssl/private/dhparam.pem

# Expose ports
EXPOSE 80 443

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost/nginx-health || exit 1

# Use non-root user
USER nginx

# Start Nginx with environment variable substitution
CMD ["/bin/sh", "-c", "envsubst '${SERVER_NAME_LOCAL} ${SERVER_NAME_DOMAIN} ${SERVER_NAME_IPV4} ${SERVER_NAME_IPV6} ${API_HOST} ${API_PORT} ${SSL_CERT_PATH} ${SSL_KEY_PATH} ${SSL_DHPARAM_PATH}' < /etc/nginx/conf.d/default.conf > /etc/nginx/conf.d/default.conf.tmp && mv /etc/nginx/conf.d/default.conf.tmp /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"]
